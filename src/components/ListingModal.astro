---
import { supabase } from '../utils/supabase';
---

<div id="listingModal" class="fixed inset-0 bg-gray-900 bg-opacity-75 hidden z-50 flex items-center justify-center">
  <div class="bg-white rounded-lg max-w-2xl w-full mx-4 relative">
    <button 
      type="button" 
      class="absolute top-4 right-4 text-gray-400 hover:text-gray-500"
      id="closeModal"
    >
      <span class="sr-only">Close</span>
      <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>

    <div class="p-6">
      <h2 class="text-2xl font-bold text-gray-900 mb-8">Submit Your Listing</h2>
      <form class="space-y-6" id="listingForm">
        <div>
          <label for="business-name" class="block text-sm font-medium text-gray-700 mb-2">Business Name</label>
          <input
            type="text"
            id="business-name"
            name="title"
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-transparent"
            required
          />
        </div>
        <div>
          <label for="business-description" class="block text-sm font-medium text-gray-700 mb-2">Description</label>
          <textarea
            id="business-description"
            name="description"
            rows="4"
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-transparent"
            required
          ></textarea>
        </div>
        <div>
          <label for="business-content" class="block text-sm font-medium text-gray-700 mb-2">Content</label>
          <textarea
            id="business-content"
            name="content"
            rows="6"
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-transparent"
            required
          ></textarea>
        </div>
        <div>
          <label for="business-tags" class="block text-sm font-medium text-gray-700 mb-2">Tags (comma-separated)</label>
          <input
            type="text"
            id="business-tags"
            name="tags"
            class="w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-primary focus:border-transparent"
            required
          />
        </div>
        <div class="text-center">
          <button
            type="submit"
            class="inline-block bg-primary text-white px-8 py-3 rounded-lg font-semibold hover:bg-opacity-90 transition-colors"
          >
            Submit Listing
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  const modal = document.getElementById('listingModal');
  const closeButton = document.getElementById('closeModal');
  const openButtons = document.querySelectorAll('[data-open-modal]');
  const form = document.getElementById('listingForm') as HTMLFormElement;

  function toggleModal() {
    modal?.classList.toggle('hidden');
    document.body.classList.toggle('overflow-hidden');
  }

  openButtons.forEach(button => {
    button.addEventListener('click', toggleModal);
  });

  closeButton?.addEventListener('click', toggleModal);

  modal?.addEventListener('click', (e) => {
    if (e.target === modal) {
      toggleModal();
    }
  });

  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !modal?.classList.contains('hidden')) {
      toggleModal();
    }
  });

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const data = {
      title: formData.get('title') as string,
      description: formData.get('description') as string,
      content: formData.get('content') as string,
      tags: (formData.get('tags') as string).split(',').map(tag => tag.trim())
    };

    try {
      const response = await fetch('/api/directory/submit', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });

      if (response.ok) {
        alert('Listing submitted successfully!');
        form.reset();
        toggleModal();
      } else {
        throw new Error('Failed to submit listing');
      }
    } catch (error) {
      console.error('Error submitting listing:', error);
      alert('Failed to submit listing. Please try again.');
    }
  });
</script>